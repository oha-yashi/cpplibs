#include <bits/stdc++.h>
using namespace std;

string to_bits(long long n){
  string bits;
  while(n){
    bits.push_back((n&1) + '0');
    n >>= 1;
  }
  reverse(bits.begin(), bits.end());
  return bits;
}

int main(){
  long long p;
  for(int i=0; i<10; i++){
    p = pow(10, i);
    printf("%2lu桁 %s = %lld = 10^%d\n", to_bits(p).size(), to_bits(p).c_str(), p, i);
  }
  cout<<endl;
  p = INT_MAX;
  printf("%2lu桁 %s = INT_MAX = %d\n", to_bits(p).size(), to_bits(p).c_str(), INT_MAX);
  cout<<endl;
  for(int i=10; i<19; i++){
    p = pow(10, i);
    printf("%2lu桁 %s = %lld = 10^%d\n", to_bits(p).size(), to_bits(p).c_str(), p, i);
  }
  cout<<endl;
  p = LLONG_MAX;
  printf("%2lu桁 %s = LLONG_MAX = %lld\n", to_bits(p).size(), to_bits(p).c_str(), LLONG_MAX);
}

/*
 1桁 1 = 1 = 10^0
 4桁 1010 = 10 = 10^1
 7桁 1100100 = 100 = 10^2
10桁 1111101000 = 1000 = 10^3
14桁 10011100010000 = 10000 = 10^4
17桁 11000011010100000 = 100000 = 10^5
20桁 11110100001001000000 = 1000000 = 10^6
24桁 100110001001011010000000 = 10000000 = 10^7
27桁 101111101011110000100000000 = 100000000 = 10^8
30桁 111011100110101100101000000000 = 1000000000 = 10^9

31桁 1111111111111111111111111111111 = INT_MAX = 2147483647

34桁 1001010100000010111110010000000000 = 10000000000 = 10^10
37桁 1011101001000011101101110100000000000 = 100000000000 = 10^11
40桁 1110100011010100101001010001000000000000 = 1000000000000 = 10^12
44桁 10010001100001001110011100101010000000000000 = 10000000000000 = 10^13
47桁 10110101111001100010000011110100100000000000000 = 100000000000000 = 10^14
50桁 11100011010111111010100100110001101000000000000000 = 1000000000000000 = 10^15
54桁 100011100001101111001001101111110000010000000000000000 = 10000000000000000 = 10^16
57桁 101100011010001010111100001011101100010100000000000000000 = 100000000000000000 = 10^17
60桁 110111100000101101101011001110100111011001000000000000000000 = 1000000000000000000 = 10^18

63桁 111111111111111111111111111111111111111111111111111111111111111 = LLONG_MAX = 9223372036854775807
*/